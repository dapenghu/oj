/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        if (root == null) return list;
        
        Stack<TreeNode> s = new Stack<>();
        TreeNode cur = root;
        while (cur != null || !s.isEmpty()){
            if (cur != null){
                if (cur.right != null) s.push(cur.right);
                s.push(cur);
                cur = cur.left;

            }else{
                cur = s.pop();
                if (s.isEmpty() || cur.right != s.peek()){
                    list.add(cur.val);
                    cur = null;
                }else {
                    s.pop();
                    s.push(cur);
                    cur = cur.right;
                }
            }
        }
        return list;
    }
}
