 /**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if (head == null || head.next == null) return head;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        
        ListNode pre = dummy;
        for (int i = 0; i < m - 1 && pre != null; i++) pre = pre.next;
        if (pre == null || pre.next == null) return head;
        ListNode tail = pre.next;
        for(int i = m; tail.next != null && i < n; i++) {
            ListNode next = tail.next;
            tail.next = next.next;
            next.next = pre.next;
            pre.next = next;
        }
        return dummy.next;
    }
}

