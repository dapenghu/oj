 public class Solution {
    public int minDistance(String word1, String word2) {
        int M = word1.length();
        int N = word2.length();
        if(M==0) return N;
        if(N==0) return M;
        
        int dp[][] = new int[M][N];
        if(word1.charAt(0)!=word2.charAt(0)) dp[0][0]=1;
        for(int i=1; i<M; i++)
          dp[i][0] = 
            (word1.charAt(i)==word2.charAt(0)) ? i : dp[i-1][0]+1;

        for(int j=1; j<N; j++)
          dp[0][j] = 
            (word1.charAt(0)==word2.charAt(j)) ? j : (dp[0][j-1]+1);

        for(int i=1; i<M; i++){
            for(int j=1; j<N; j++){
                if(word1.charAt(i)==word2.charAt(j)){
                  dp[i][j] = dp[i-1][j-1];
                  
                }else{
                  dp[i][j] = Math.min(Math.min(dp[i-1][j], dp[i][j-1]), dp[i-1][j-1]) +1;
                }
            }
        }
        return dp[M-1][N-1];
    }
}