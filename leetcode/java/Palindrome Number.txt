public class Solution {
    public boolean isPalindrome(int x) {
        if (x < 0) return false;
        if (x < 10) return true;
        int mag = 1;
        while (x/10 >= mag) mag *= 10;
        // pitfall here
        while(x > 0) {
            int left = x/mag;
            int right = x % 10;
            if (right != left) return false;
            x = x % mag;
            x /= 10;
            mag /= 100;
        }
        return true;
    }
    
    public boolean isPalindrome1(int x) {
        if (x < 0) return false;
        if (x < 10) return true;
        long lx = x;
        long base = 10;
        // need consider overflow here, so use long instead of int
        while ((lx/10) >= base) base *= 10;
        while (lx > 0){
            long head = lx / base;
            long tail = lx % 10;
            if (head != tail) {
                return false;
            }
            lx = (lx % base) / 10;
            base /= 100;
        }
        return true;
    }
}