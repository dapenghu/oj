 /**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        head = dummy;
        while (head.next != null && head.next.next != null){
            ListNode one = head.next;
            ListNode two = one.next;
            // pitfall: the order is important here, otherwise infinite loop
            one.next = two.next;
            two.next = one;
            head.next = two;
            head = one;
        }
        return dummy.next;
    }
    
    public ListNode swapPairs1(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode cur = dummy;
        while (cur.next != null && cur.next.next != null){
            ListNode a = cur.next;
            ListNode b = a.next;
            ListNode next = b.next;
            cur.next = b;
            b.next = a;
            a.next = next;
            cur = a;
            // cur -> a -> b ->  ==> cur -> b -> a ->
        }
        return dummy.next;
    }
}