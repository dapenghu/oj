 /**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> path = new ArrayList<>();
        search(root, sum, 0, path, ans);
        return ans;
    }
    public void search(TreeNode root, int sum, int parent, List<Integer> path, List<List<Integer>> ans){
        if (root == null) return;
        int cur = parent + root.val;
        path.add(root.val);
        if(root.left == null && root.right == null && cur == sum){
            List<Integer> tmp = new ArrayList<>();
            tmp.addAll(path);
            ans.add(tmp);
        }else{
          search(root.left, sum, cur, path, ans);
          search(root.right, sum, cur, path, ans);
        }
        path.remove(path.size() - 1);
    }
}