/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null) return ans;
        
        List<TreeNode> cur = new ArrayList<>();
        cur.add(root);
        for (boolean toRight = true; !cur.isEmpty(); toRight = !toRight){
            List<TreeNode> next = new ArrayList<>();
            List<Integer> row = new ArrayList<>();
            for (int i = 0; i < cur.size(); i++){
                TreeNode node = cur.get(i);
                row.add(node.val);
                if (node.left != null) next.add(node.left);
                if (node.right != null) next.add(node.right);
            }
            cur = next;
            if (!toRight){
                Collections.reverse(row);
            }
            ans.add(row);
        }
        return ans;
    }
}