 public class Solution {
    public void rotate(int[][] matrix) {
        int N = matrix.length;
        if (N == 0) return;

        for (int i = 0, j = N - 1; i < j; i++, j--){
            for (int k = 0; k < j - i; k++){
                int tmp = matrix[i][i + k];
                matrix[i][i + k] = matrix[j - k][i];
                matrix[j - k][i] = matrix[j][j - k];
                matrix[j][j - k] = matrix[i + k][j];
                matrix[i + k][j] = tmp;
            }
        }
    }
    
    public void rotate1(int[][] matrix) {
        int N = matrix.length;
        // up-down
        for (int i = 0; i < (N>>1); i++){
            for (int j = 0; j < N; j++){
                swap(matrix, i, j, N - 1 - i, j);
            }
        }
        // reflect diagnal line
        for (int i = 0; i < N - 1; i++){
            for (int j = i + 1; j < N; j++){
                swap(matrix, i, j, j, i);
            }
        }
    }
    void swap(int[][] m, int i_1, int j_1, int i_2, int j_2){
        int tmp = m[i_1][j_1];
        m[i_1][j_1] = m[i_2][j_2];
        m[i_2][j_2] = tmp;
    }
}